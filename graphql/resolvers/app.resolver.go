package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	graphql1 "workspace-service/graphql"

	"github.com/gofrs/uuid"
)

// CreateApp is the resolver for the createApp field.
func (r *mutationResolver) CreateApp(ctx context.Context, input graphql1.CreateAppInput) (*graphql1.App, error) {
	return r.appService.CreateApp(&input)
}

// UpdateApp is the resolver for the updateApp field.
func (r *mutationResolver) UpdateApp(ctx context.Context, id string, input graphql1.UpdateAppInput) (*graphql1.App, error) {
	return r.appService.UpdateApp(uuid.Must(uuid.FromString(id)), &input)
}

// App is the resolver for the App field.
func (r *queryResolver) App(ctx context.Context, id string) (*graphql1.App, error) {
	return r.appService.GetApp(uuid.Must(uuid.FromString(id)))
}

// Apps is the resolver for the Apps field.
func (r *queryResolver) Apps(ctx context.Context) ([]*graphql1.App, error) {
	return r.appService.GetApps()
}
