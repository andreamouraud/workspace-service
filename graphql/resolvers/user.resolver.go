package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	graphql1 "workspace-service/graphql"

	"github.com/gofrs/uuid"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input graphql1.CreateUserInput) (*graphql1.User, error) {
	return r.userService.CreateUser(&input)
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, id string, input graphql1.UpdateUserInput) (*graphql1.User, error) {
	return r.userService.UpdateUser(uuid.Must(uuid.FromString(id)), &input)
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id string) (*graphql1.User, error) {
	return r.userService.GetUser(uuid.Must(uuid.FromString(id)))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*graphql1.User, error) {
	return r.userService.GetUsers()
}

func (r *queryResolver) userGroups(ctx context.Context, userID string) ([]*graphql1.Group, error) {
	panic("")
}
