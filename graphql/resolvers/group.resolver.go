package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	graphql1 "workspace-service/graphql"

	"github.com/gofrs/uuid"
)

// CreateGroup is the resolver for the createGroup field.
func (r *mutationResolver) CreateGroup(ctx context.Context, input graphql1.CreateGroupInput) (*graphql1.Group, error) {
	return r.groupService.CreateGroup(&input)
}

// UpdateGroup is the resolver for the updateGroup field.
func (r *mutationResolver) UpdateGroup(ctx context.Context, id string, input graphql1.UpdateGroupInput) (*graphql1.Group, error) {
	return r.groupService.UpdateGroup(uuid.Must(uuid.FromString(id)), &input)
}

// Group is the resolver for the group field.
func (r *queryResolver) Group(ctx context.Context, id string) (*graphql1.Group, error) {
	return r.groupService.GetGroup(uuid.Must(uuid.FromString(id)))
}

// Groups is the resolver for the groups field.
func (r *queryResolver) Groups(ctx context.Context) ([]*graphql1.Group, error) {
	return r.groupService.GetGroups()
}
